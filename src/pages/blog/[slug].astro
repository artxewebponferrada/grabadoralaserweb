---
import Layout from '../../layouts/Layout.astro';
import TagCloud from '../../components/TagCloud.astro';
import { format } from 'date-fns';
import data from '../../data';
import { getPublishedArticles, getAuthorById } from '../../utils/dataProcessing';

export async function getStaticPaths() {
  const publishedArticles = getPublishedArticles();
  
  return publishedArticles.map((article) => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

const { article } = Astro.props;
const author = getAuthorById(article.author);

// Get related articles (same tags, excluding current article)
const relatedArticles = getPublishedArticles()
  .filter(
    (a) =>
      a.slug !== article.slug &&
      a.tags.some((tag) => article.tags.includes(tag))
  )
  .slice(0, 3);

// Schema.org data
const schema = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": article.title,
  "description": article.excerpt,
  "image": article.featuredImage,
  "datePublished": article.publishDate,
  "dateModified": article.updateDate || article.publishDate,
  "author": {
    "@type": "Person",
    "name": author.name
  }
};
---

<Layout title={article.title} description={article.excerpt}>
  <script type="application/ld+json" set:html={JSON.stringify(schema)} />

  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Article Header -->
    <header class="mb-12">
      <div class="flex items-center gap-4 mb-6">
        <img
          src={author.avatar}
          alt={author.name}
          class="w-12 h-12 rounded-full object-cover"
        />
        <div>
          <a href={`/authors/${author.slug}`} class="text-gray-900 font-medium hover:text-primary-600">
            {author.name}
          </a>
          <div class="flex items-center gap-2 text-sm text-gray-500">
            <time datetime={article.publishDate}>
              {format(new Date(article.publishDate), 'MMM d, yyyy')}
            </time>
            <span>Â·</span>
            <span>{article.readTime} min de lectura</span>
          </div>
        </div>
      </div>

      <h1 class="text-4xl font-extrabold text-gray-900 mb-6">
        {article.title}
      </h1>

      <p class="text-xl text-gray-600 mb-6">
        {article.excerpt}
      </p>

      <TagCloud tags={article.tags} />
    </header>

    <!-- Featured Image -->
    {article.featuredImage && (
      <figure class="mb-12">
        <div class="aspect-w-16 aspect-h-9 bg-gray-100 rounded-2xl overflow-hidden">
          <img
            src={article.featuredImage}
            alt={article.title}
            class="w-full h-full object-cover"
          />
        </div>
      </figure>
    )}

    <!-- Article Content -->
    <div class="prose prose-lg max-w-none mb-12">
      <div set:html={article.content} />
    </div>

    <!-- Author Bio -->
    <section class="bg-gray-50 rounded-2xl p-8 mb-12">
      <div class="flex items-start gap-6">
        <img
          src={author.avatar}
          alt={author.name}
          class="w-20 h-20 rounded-full object-cover"
        />
        <div>
          <h2 class="text-xl font-bold text-gray-900 mb-2">Sobre {author.name}</h2>
          <p class="text-gray-600 mb-4">{author.bio}</p>
          {author.social && (
            <div class="flex gap-4">
              {author.social.twitter && (
                <a
                  href={`https://twitter.com/${author.social.twitter}`}
                  class="text-gray-400 hover:text-primary-600"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <span class="sr-only">Twitter</span>
                  <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84" />
                  </svg>
                </a>
              )}
              {author.social.linkedin && (
                <a
                  href={`https://linkedin.com/in/${author.social.linkedin}`}
                  class="text-gray-400 hover:text-primary-600"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <span class="sr-only">LinkedIn</span>
                  <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                  </svg>
                </a>
              )}
            </div>
          )}
        </div>
      </div>
    </section>

    <!-- Related Articles -->
    {relatedArticles.length > 0 && (
      <section>
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Related Articles</h2>
        <div class="grid gap-8 md:grid-cols-3">
          {relatedArticles.map((related) => {
            const relatedAuthor = getAuthorById(related.author);
            return (
              <article class="group">
                <a href={`/blog/${related.slug}`} class="block">
                  <h3 class="text-xl font-bold text-gray-900 group-hover:text-primary-600 mb-2">
                    {related.title}
                  </h3>
                  <p class="text-gray-600 mb-4 line-clamp-2">
                    {related.excerpt}
                  </p>
                  <div class="flex items-center gap-3">
                    <img
                      src={relatedAuthor.avatar}
                      alt={relatedAuthor.name}
                      class="w-8 h-8 rounded-full object-cover"
                    />
                    <div class="text-sm">
                      <span class="text-gray-900">{relatedAuthor.name}</span>
                      <div class="text-gray-500">
                        {format(new Date(related.publishDate), 'MMM d, yyyy')}
                      </div>
                    </div>
                  </div>
                </a>
              </article>
            );
          })}
        </div>
      </section>
    )}
  </article>
</Layout>